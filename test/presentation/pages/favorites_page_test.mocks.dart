// Mocks generated by Mockito 5.0.17 from annotations
// in covid_app/test/presentation/pages/favorites_page_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:covid_app/src/core/failure.dart' as _i5;
import 'package:covid_app/src/core/params.dart' as _i7;
import 'package:covid_app/src/domain/entities/country.dart' as _i6;
import 'package:covid_app/src/domain/use_cases/add_country_to_favorites_usecase.dart'
    as _i8;
import 'package:covid_app/src/domain/use_cases/get_favorites_countries_usecase.dart'
    as _i3;
import 'package:covid_app/src/domain/use_cases/remove_country_from_favorites_usecase.dart'
    as _i9;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [GetFavoritesCountriesUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetFavoritesCountriesUseCase extends _i1.Mock
    implements _i3.GetFavoritesCountriesUseCase {
  MockGetFavoritesCountriesUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i4.Stream<List<_i6.Country>>>> call(
          {_i7.Params? params}) =>
      (super.noSuchMethod(Invocation.method(#call, [], {#params: params}),
          returnValue: Future<
                  _i2.Either<_i5.Failure, _i4.Stream<List<_i6.Country>>>>.value(
              _FakeEither_0<_i5.Failure, _i4.Stream<List<_i6.Country>>>())) as _i4
          .Future<_i2.Either<_i5.Failure, _i4.Stream<List<_i6.Country>>>>);
}

/// A class which mocks [AddCountryToFavoritesUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockAddCountryToFavoritesUseCase extends _i1.Mock
    implements _i8.AddCountryToFavoritesUseCase {
  MockAddCountryToFavoritesUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> call({_i6.Country? params}) =>
      (super.noSuchMethod(Invocation.method(#call, [], {#params: params}),
              returnValue: Future<_i2.Either<_i5.Failure, void>>.value(
                  _FakeEither_0<_i5.Failure, void>()))
          as _i4.Future<_i2.Either<_i5.Failure, void>>);
}

/// A class which mocks [RemoveCountryFromFavoritesUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveCountryFromFavoritesUseCase extends _i1.Mock
    implements _i9.RemoveCountryFromFavoritesUseCase {
  MockRemoveCountryFromFavoritesUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> call({_i6.Country? params}) =>
      (super.noSuchMethod(Invocation.method(#call, [], {#params: params}),
              returnValue: Future<_i2.Either<_i5.Failure, void>>.value(
                  _FakeEither_0<_i5.Failure, void>()))
          as _i4.Future<_i2.Either<_i5.Failure, void>>);
}
